For my Intro to Software Engineering class, we were put into teams to work on a project throughout the semester. This project is as much as I could copy over from my local save of the project. The repository we used in class was deleted before I had the chance to clone it.

The project was a fairly simple E-store site to "sell" whatever the group decided upon. 

There was some sample code given to use to start on, but most of the code was written by the group. Plus, a lot of the sample code was adjacent to other assignments we had in the class so we had the experience writing them anyways.

My main contribution to the project was all of the unit testing files. However, due to the nature of the group, I also had a lot of input on the other parts of the project and had to understand everything we did. Additionally, I proofread/debugged a lot of the other members' code - so I was fairly competent of all parts of the code.


As the "Intro to Software Engineering" name suggests, there was more to the class than simply making the store. We also had a lot of other responsibilities: i.e. maintaining a trello board of our progress, holding daily briefs to discuss what we were all working on, running scrum sprints and team, doing post-sprint retrospectives, etc.

I think my biggest takeaway from this class was not the code or technical skills I learned, though it was very helpful. Being put in a group that I did not get to choose, trying to learn how the other people in my group work best, communicating with them, working through the frustrations that come from working in a group, etc. were all very helpful. Now that I have had this experience, I know that I am much better prepared to work at a real job.
